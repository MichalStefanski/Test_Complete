@model Test.WebUI.Models.FormViewModel

@{
    ViewBag.Title = "CouponRegister";
    Layout = "~/Views/Shared/_MobileLayout.cshtml";
}

@using (Html.BeginForm("CouponRegister", "Home", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.GetTransactionViewModel.TransactionID)
    @Html.HiddenFor(model => model.GetTransactionViewModel.CustomerID)
    @Html.HiddenFor(model => model.GetTransactionViewModel.PrizeRecieved)

    <div class="form-group">
        @Html.LabelFor(model => model.GetCustomerViewModel.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GetCustomerViewModel.PhoneNumber,
            new { htmlAttributes = new { @data_val = "false", @class = "form-control", @type = "text", @disabled = "disabled" } })
            @Html.ValidationMessageFor(model => model.GetCustomerViewModel.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-row" style="padding-left:10px">
        <div class="form-group">
            @Html.LabelFor(model => model.GetTransactionViewModel.CouponNumber, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GetTransactionViewModel.CouponNumber,
                Model.GetTransactionViewModel.PrizeRecieved ? (object)new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GetTransactionViewModel.CouponNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.GetPrizeViewModel.PrizeName, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="dropdown">
                @if (Model.GetTransactionViewModel.PrizeRecieved)
                {
                    @Html.DropDownListFor(model => model.GetTransactionViewModel.PrizeID,
                    new SelectList(Model.PrizeViewModels, "Value", "Text"), new { @class = "form-control", @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.GetTransactionViewModel.CouponNumber, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.DropDownListFor(model => model.GetTransactionViewModel.PrizeID,
                    new SelectList(Model.PrizeViewModels, "Value", "Text"), new { @class = "form-control"})
                    @Html.ValidationMessageFor(model => model.GetTransactionViewModel.CouponNumber, "", new { @class = "text-danger" })
                }
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GetTransactionViewModel.TransactionValue, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GetTransactionViewModel.TransactionValue, Model.GetTransactionViewModel.PrizeRecieved ? (object)new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GetTransactionViewModel.TransactionValue, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GetTransactionViewModel.TransactionNumber, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GetTransactionViewModel.TransactionNumber, Model.GetTransactionViewModel.PrizeRecieved ? (object)new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } } : (object)new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GetTransactionViewModel.TransactionNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.GetTransactionViewModel.TransactionDate, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GetTransactionViewModel.TransactionDate, Model.GetTransactionViewModel.PrizeRecieved ? (object)new { htmlAttributes = new { @class = "form-control", @type = "date", @disabled = "disabled" } } : (object)new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.GetTransactionViewModel.TransactionDate, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @if (!Model.GetTransactionViewModel.PrizeRecieved)
        {
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        }
    </div>
</div>
}

<div class="col-md-offset-2 col-md-10">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-success btn-lg" })
</div>

